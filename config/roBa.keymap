#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        mkp_exit_AML: mkp_exit_AML {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &mkp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&sl 4>;

            label = "MKP_EXIT_AML";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 6 Q           &kp W         &kp E         &kp R                        &kp T                                                                          &kp Y        &kp U  &lt 5 I    &kp O    &lt 5 P
&kp A             &kp S         &kp D         &kp F                        &kp G             &kp C_MUTE                                    &kp EQUAL      &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B             &mt C_AC_NEXT_KEYBOARD_LAYOUT_SELECT TAB      &kp MINUS      &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_GUI  &lt_to_layer_0 1 LANGUAGE_2  &lt 2 LANGUAGE_1  &mt LEFT_COMMAND SPACE                        &kp BACKSPACE  &lt 3 ENTER                             &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        Icon {
            bindings = <
&kp MINUS  &kp LS(LG(N5))  &trans  &trans             &kp PLUS                                            &kp CARET              &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp TILDE
&kp SLASH  &trans          &trans  &kp DOUBLE_QUOTES  &kp ASTERISK  &kp C_MUTE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR       &kp PERCENT   &kp CARET             &kp DOUBLE_QUOTES
&trans     &trans          &trans  &kp SEMI           &kp COLON     &kp EQUAL       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans     &trans          &trans  &trans             &trans        &trans          &trans                &trans                                                                      &kp PIPE
            >;
        };

        Function-Num {
            bindings = <
&kp F1   &kp F2                &kp LS(UP_ARROW)        &kp LA(LEFT_ARROW)      &kp LA(RIGHT_ARROW)                                                                                         &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans
&kp F6   &kp LS(LEFT_ARROW)    &kp LS(DOWN_ARROW)      &kp LS(RIGHT_ARROW)     &kp LA(DOWN_ARROW)       &trans                                                                     &trans  &trans  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&kp F11  &kp LS(LG(UP_ARROW))  &kp LG(LS(DOWN_ARROW))  &kp LS(LG(LEFT_ARROW))  &kp LS(LG(RIGHT_ARROW))  &mt C_AC_NEXT_KEYBOARD_LAYOUT_SELECT C_AC_NEXT_KEYBOARD_LAYOUT_SELECT      &trans  &kp N0  &kp N7        &kp N8        &kp N9        &trans
&trans   &trans                &trans                  &trans                  &trans                   &trans                                                                     &trans  &trans                                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)         &trans                                             &kp LC(UP_ARROW)    &kp LC(LS(TAB))  &kp UP_ARROW    &kp LC(TAB)      &trans
&kp HOME        &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW     &kp END              &trans                &trans  &kp LC(LEFT_ARROW)  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp LC(RIGHT_ARROW)
&kp LEFT_SHIFT  &trans           &trans          &trans              &trans               &kp LC(UP_ARROW)      &trans  &kp LG(LS(N))       &kp LG(T)        &kp LG(LS(T))   &kp LG(W)        &trans
&trans          &trans           &trans          &kp LC(LEFT_ARROW)  &kp LC(RIGHT_ARROW)  &trans                &trans  &trans                                                                &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R  &to_layer_0 T                      &to_layer_0 Y  &to_layer_0 U      &mo 5              &to_layer_0 O  &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F  &to_layer_0 G  &trans      &trans  &to_layer_0 H  &mkp_exit_AML MB1  &mkp_exit_AML MB2  &to_layer_0 L  &mo 5
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V  &to_layer_0 B  &mo 5       &trans  &to_layer_0 N  &mkp_exit_AML MB4  &mkp_exit_AML MB5  &trans         &trans
&trans         &trans         &trans         &trans         &trans         &trans      &trans  &trans                                                              &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
